@model AccountListViewModel

@{
    ViewData["Title"] = "User's administration";

    int itemsPerPage = Model.ItemsPerPage;

    var symboleFullNameSort = "";
    var symboleEmailSort = "";
    var symboleStatusSort = "";
    switch (Model.CurrentSort)
    {
        case "fullname_desc":
            symboleFullNameSort = "fa-sort-down";
            break;
        case "email_desc":
            symboleEmailSort = "fa-sort-down";
            break;
        case "email":
            symboleEmailSort = "fa-sort-up";
            break;
        case "status_desc":
            symboleStatusSort = "fa-sort-down";
            break;
        case "status":
            symboleStatusSort = "fa-sort-up";
            break;
        default:
            symboleFullNameSort = "fa-sort-up";
            break;
    }
}

<form class="form-inline py-2 my-2 my-lg-0" asp-action="Index" asp-controller="Accounts">
    <input type="hidden" name="sortOrder" value="@Model.CurrentSort" />
    <input class="form-control mr-sm-2" type="text" placeholder="Search" name="searchStr" value="@Model.SearchStr" />
    <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
</form>
<div class="table-responsive">
    <table class="table table-striped table-dark">
        <thead>
            <tr class="table-primary">
                <th>
                    @Html.DisplayNameFor(model => model.Users.First().Id)
                </th>
                <th>
                    <a asp-controller="Accounts" asp-action="Index" asp-route-searchStr="@Model.SearchStr" asp-route-sortOrder="@Model.FullNameSort">
                        @Html.DisplayNameFor(model => model.Users.First().FullName) <i class="fas @symboleFullNameSort"></i>
                    </a>
                </th>
                <th>
                    <a asp-controller="Accounts" asp-action="Index" asp-route-searchStr="@Model.SearchStr" asp-route-sortOrder="@Model.EmailSort">
                        @Html.DisplayNameFor(model => model.Users.First().Email) <i class="fas @symboleEmailSort"></i>
                    </a>
                </th>
                <th>
                    <a asp-controller="Accounts" asp-action="Index" asp-route-searchStr="@Model.SearchStr" asp-route-sortOrder="@Model.StatusSort">
                        @Html.DisplayNameFor(model => model.Users.First().AccountStatus) <i class="fas @symboleStatusSort"></i>
                    </a>
                </th>
                <th>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (AppUser user in Model.Users)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => user.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => user.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => user.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => user.AccountStatus)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-controller="Accounts" asp-route-id="@user.Id" class="btn btn-sm btn-primary">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@await Component.InvokeAsync("Pagination", new { numberOfItems = Model.TotalItems, itemsPerPage = itemsPerPage, currentPage = Model.PageIndex, controller = "Accounts", action = "Index", searchOrFilter = Model.SearchStr, sortOrder = Model.CurrentSort })

