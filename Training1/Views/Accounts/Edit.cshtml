@model Training1.Areas.Identity.Data.AppUser

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
@if (Model.AccountStatus != Status.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(
 User, Model, UserOperations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post" asp-action="UpdateStatus">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@Status.Approved" />
            <button type="submit" class="btn btn-xs btn-success">Approve</button>
        </form>
    }
}

@if (Model.AccountStatus != Status.Rejected)
{
    @if ((await AuthorizationService.AuthorizeAsync(
 User, Model, UserOperations.Reject)).Succeeded)
    {
        <form style="display:inline;" method="post" asp-action="UpdateStatus">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@Status.Rejected" />
            <button type="submit" class="btn btn-xs btn-success">Reject</button>
        </form>
    }
}
<div>
    @if (SignInManager.IsSignedIn(User) && User.IsInRole(Constants.UserAdministratorsRole))
    {
        <a asp-action="Index" asp-controller="Accounts">Back to List</a>
    }
    else
    {
        <a asp-controller="Home" asp-action="Index">Home</a>
    }
</div>
